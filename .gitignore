# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# misc
# this code is for allowing the use of DSPy instructions when the AI endpoint doesn't support it
DSPy-instructions.py
# this is the venv
reasoning/

# Distribution / packaging
.Python
build/
develop-eggs/
dist/ downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Word files
*.docx

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
reasoning.env

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Project-specific files
# Environment variables and secrets
.env.local
.env.development
.env.test
.env.production
secrets.yaml
config/secrets.yaml

# Azure OpenAI credentials
azure_openai.env
openai.key

# Reasoning engine data and logs
logs/
*.log
reasoning_state/
context_snapshots/
hypothesis_history/

# DSPy cache and compiled signatures
.dspy_cache/
signatures/
compiled_signatures/

# FastAPI specific
.pytest_cache/
test_db.sqlite

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Linux
*~

# Temporary files
*.tmp
*.temp
temp/
tmp/

# Database files
*.db
*.sqlite
*.sqlite3

# Configuration files with sensitive data
config.ini
config.yaml
settings.json

# Backup files
*.bak
*.backup

# Documentation build artifacts
docs/build/
docs/_build/

# Performance and profiling data
*.prof
*.pstats
profile_results/

# Large model files (if any)
models/
*.model
*.pkl
*.pickle

# Jupyter notebooks with outputs
*-checkpoint.ipynb

# Local development files
local_dev/
scratch/
experiments/

# API documentation generated files
openapi.json
api_docs/

# Docker files for local development
docker-compose.override.yml
.dockerignore

# Kubernetes local configs
k8s-local/
*.kubeconfig
